name: wyy_flutter # 项目包名，导包时使用
description: "A new Flutter project."
# 以下这行可以防止该包被意外发布到 pub.dev（使用 `flutter pub publish`）。对于私有包推荐这样做。
publish_to: "none" # 如果你希望发布到 pub.dev，请移除此行
# 下面定义了应用的版本号和构建号。
# 版本号由三个点分隔的数字组成，如 1.2.43
# 后面可以加上可选的构建号，用 + 分隔。
# 在 flutter build 时，可以通过 --build-name 和 --build-number 覆盖这两个值。
# 在 Android 中，build-name 用作 versionName，build-number 用作 versionCode。
# 更多 Android 版本信息请见：https://developer.android.com/studio/publish/versioning
# 在 iOS 中，build-name 用作 CFBundleShortVersionString，build-number 用作 CFBundleVersion。
# 更多 iOS 版本信息请见：
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# 在 Windows 中，build-name 用作产品和文件版本的主、次、补丁部分，build-number 用作构建后缀。
version: 1.0.0+1

environment:
  sdk: ^3.8.1

# 依赖项指定你的包运行所需的其他包。
# 若要自动升级依赖到最新版本，可以运行 `flutter pub upgrade --major-versions`。
# 你也可以手动修改下面的版本号来更新依赖。
# 若要查看哪些依赖有新版本可用，运行 `flutter pub outdated`。
dependencies:
  flutter:
    sdk: flutter
  # GetX 框架 https://pub.dev/packages/get
  get: ^4.7.2
  tdesign_flutter: ^0.2.2
  # 屏幕适配 https://pub.dev/packages/flutter_screenutil
  flutter_screenutil: ^5.9.3
  # 网络请求库 https://pub.dev/packages/dio
  dio: ^5.8.0+1
  # JSON 序列化工具类库 https://pub.dev/packages/json_annotation
  json_annotation: ^4.9.0
  # svg框架 https://pub.dev/packages/flutter_svg
  flutter_svg: ^2.2.0
  # 持久化存储
  shared_preferences: ^2.5.3
  # 让 Flutter 应用能够调用 Android 系统的 Intent
  flutter_displaymode: ^0.6.0
  # 下面这行会为你的应用添加 Cupertino Icons 字体。
  # 用于 iOS 风格图标，可通过 CupertinoIcons 类使用。
  cupertino_icons: ^1.0.8
  # 安卓 intent 库 做一些安卓原生 API 调用
  android_intent_plus: ^5.3.0
  # dio 的 cookie 管理器 做 cookie 管理
  dio_cookie_manager: ^3.2.0
  # 用于在 flutter 文件系统中 中查找常用位置
  path_provider: ^2.1.5
  # Pretty Dio logger 是一个 Dio 拦截器，以美观且易于阅读的格式记录网络请求
  pretty_dio_logger: ^1.4.0
  # dio请求缓存拦截器
  dio_cache_interceptor: ^4.0.3
  cookie_jar: ^4.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter

  # "flutter_lints" 包包含了一组推荐的 lint 规则，
  # 鼓励良好的编码习惯。该包提供的 lint 集在项目根目录下的 `analysis_options.yaml` 文件中激活。
  # 查看该文件以了解如何禁用特定 lint 规则或激活额外规则。
  flutter_lints: ^5.0.0
  # JSON 序列化工具
  json_serializable: ^6.9.5
  # 构建工具 https://pub.dev/packages/build_runner
  build_runner: ^2.5.4

# 有关本文件 Dart 通用部分的信息，见：
# https://dart.dev/tools/pub/pubspec

# 以下部分是 Flutter 包专用配置。
flutter:
  # 下面这行确保 Material Icons 字体会被包含进你的应用，
  # 这样你就可以在 material Icons 类中使用这些图标。
  uses-material-design: true

  # 若要向应用添加资源文件，在此添加 assets 部分，例如：
  assets:
    - assets/anim/
    - assets/images/
    - assets/anim/loading/

  # 一个图片资源可以指向一个或多个分辨率特定的“变体”，详见
  # https://flutter.dev/to/resolution-aware-images

  # 有关从包依赖中添加资源的详情，见
  # https://flutter.dev/to/asset-from-package

  # 若要为应用添加自定义字体，在此 flutter 部分添加 fonts 部分。每个条目需有 family 键（字体家族名），fonts 键（字体文件及描述）。例如：
  fonts:
    - family: Poppins
      fonts:
        - asset: assets/fonts/Poppins_Medium.ttf
        - asset: assets/fonts/Poppins_Regular.ttf

    - family: PingFang
      fonts:
        #  - asset: assets/fonts/苹方黑体-中黑-简.ttf
        - asset: assets/fonts/PingFang_Medium.otf
          weight: 500

    - family: PuHuiTi
      fonts:
        - asset: assets/fonts\Puhuiti.ttf

    - family: iconfont
      fonts:
        - asset: assets/fonts/iconfont.ttf
          weight: 500
  # 有关从包依赖中使用字体的详情，见
  # https://flutter.dev/to/font-from-package
